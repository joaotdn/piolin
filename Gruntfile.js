var path = '/Applications/MAMP/htdocs/piolin';module.exports = function( grunt ) {   grunt.initConfig({  	pkg: grunt.file.readJSON('package.json'),  	uglify: {  		options: {   			// the banner is inserted at the top of the output    		banner: '/*! <%= pkg.name %> <%= grunt.template.today("dd-mm-yyyy") %> */\n'  		},  		  		dist: {    		files: {      			'scripts.js': ['js/flowslider.jquery.js','js/jpreloader.js','js/caroussel.js','js/wow.js','bower_components/foundation/js/foundation.min.js','js/app.js','js/lightbox.min.js'],    		}  		}	  },    sprite:{      'all': {        src: 'sprites/*.png',        destImg: 'images/spritesheet.png',        destCSS: 'sprites.css',        algorithm: 'binary-tree'      }    },  cssmin: {    add_banner: {      options: {        banner: '/*\nTheme Name: <%= pkg.title %>\nTheme URI: <%= pkg.homepage %>\nDescription: <%= pkg.description %>\nVersion: <%= pkg.version %>\nAuthor: <%= pkg.author %>\nTags: <%= pkg.tags %>\n*/'      },          files: {        'style.css': ['stylesheets/app.css','sprites.css','stylesheets/jpreloader.css','stylesheets/animate.css','stylesheets/lightbox.css']      }    }  },  imagemin: {            dist: {                options: {                    optimizationLevel: 7,                    progressive: false                },                files: [{                    //expand: true,                    cwd: 'images/',                    src: 'images/*',                    dest: 'images/'                }]            }  },	watch : {      dist : {        files : [          'js/*','stylesheets/*','images/*','*.php','*.html','sprites/*'        ],         tasks : [ 'uglify','sprite','cssmin','imagemin' ]      }    },    rsync: {    options: {        args: ["--verbose"],        exclude: ["config.rb","bower.json","Gruntfile.js","package.json",".git*","*.scss","node_modules",".sass-cache","bower_components","sprites","stylesheets","js","scss"],        recursive: true    }, /*    dist: {        options: {            src: "./",            dest: "../dist"        }    },    stage: {        options: {            src: "../dist/",            dest: "/var/www/site",            host: "user@staging-host",            syncDestIgnoreExcl: true        }    },*/    prod: {        options: {            src: "./",            dest: "/home/piollingrup/public_html/site/wp-content/themes/piollin",            host: "piollingrup@piollingrupodeteatro.com",            syncDestIgnoreExcl: true        }    }  },  });    //grunt.loadNpmTasks('grunt-ftp-deploy');  grunt.loadNpmTasks('grunt-contrib-uglify');  grunt.loadNpmTasks('grunt-contrib-cssmin');  grunt.loadNpmTasks('grunt-spritesmith');  grunt.loadNpmTasks('grunt-contrib-watch');  grunt.loadNpmTasks("grunt-rsync");  grunt.loadNpmTasks('grunt-contrib-imagemin');  grunt.registerTask( 'default', ['rsync'] );  grunt.registerTask( 'w', [ 'watch' ] );};